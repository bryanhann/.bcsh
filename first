#!/bin/bash
#This shebang is for synax only. Do not make executable!

borg_export () {
    echo '!' \${$1} ':=' $2
    export $1=$2;
}

#--------------------------------------------------------
# Initialize ourselves if we have not done so already.
#--------------------------------------------------------

[ -z "$BORG_INIT_ID" ] && {
    borg_export BORG_INIT_ID        $$
    borg_export BORG_INIT_DOTFILE   $1
    borg_export BORG_INIT_ARGS      "$*"
    borg_export BORG_MYBIN          ${HOME}/.local/var/myborg/mybin
    borg_export BORG_SCRIPT_INPATH  ${BORG}/.scripts/inpath.py
    mkdir -p ${BORG_MYBIN}
    exit () { echo try \'builtin exit\' ; }
}

#--------------------------------------------------------
# Define some functions.
#--------------------------------------------------------

borg_source () {
    _path () {
        [ -f /usr/bin/realpath ] \
        && echo ./$( realpath --relative-to ${BORG} ${1} ) \
        || echo $1
    }
    echo . $(_path $1)
    . $1
}

borg_addpath () {
    ${BORG_SCRIPT_INPATH} $1 || {
        echo '!' PATH+=$1
        export PATH=$PATH:$1
    }
}

borg_modwalk_all () {
    # list all paths under $1 whose components start with a digit
    for name in $(/bin/ls ${1}|grep ^[0-9]|sort); do
        path=$1/$name
        echo $path
        [ -d $path ] && borg_modwalk_all $path
    done
}

borg_modwalk () {
    # like borg_modwalk_all, but only the files.
    for path in $(borg_modwalk_all $1); do
        [ -f $path ] && echo $path
    done
}

borg_source_module () {
    # source all borg_modwald files under $1
    echo ! SOURCING FROM $1
    for module in $(borg_modwalk $1); do
        borg_source $module
    done
}

