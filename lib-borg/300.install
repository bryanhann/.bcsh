borg_install () {
    local src=https://github.com/bryanhann/dot.borg
    local dst=$1
    shift
    local options="$*"
    [ -z ${dst} ]                   &&  _help
    [ -z ${dst} ]                   &&  return
    [ -d ${dst} ]                   ||  __run__ git clone ${options} ${src} ${dst}
    borg_repo_has_id ${dst} 6fdf713 || __log__ not a borg directory: ${dst}
    borg_repo_has_id ${dst} 6fdf713 || return 99
    borg_backup ~/.profile          || return $?
    borg_backup ~/.bashrc           || return $?
    _overwrite_profile ${dst}
    _overwrite_bashrc
}

_overwrite_profile () {
cat>~/.profile<<PROFILE_DOC2
echo
echo "::::::::::::::::[~/.profile] BEGIN"
set -x
sleep 1
export BORG=$1
git clone https://github.com/bryanhann/dot.borg ${BORG} 2> /dev/null
set +x
echo "::::::::::::::::[~/.profile] END"
echo
bash
PROFILE_DOC2
}

_overwrite_bashrc () {
cat>~/.bashrc<<BASHRC_DOC2
source \${BORG}/bashrc.sh
BASHRC_DOC2
}

_help () {
cat<<USAGE_DOC
BORG_INSTALL -- Install borg on the local machine

USAGE
    borg_install DIR [OPTIONS]

DESCRIPION

    This will overwrite the user's .profile and .bashrc files
    to use the BORG-BASH system located at DIR. 

    If no such system exists at DIR, an attempt will be made to
    clone it from the git repository

        https://github.com/bryanhann/dot.borg

    Any specified [OPTIONS] will be passed to 'git clone'.  If 
    the clone operation fails, nothing will be overwritten.

    Backups of overwritten files will be saved in the home dir.

EXAMPLES

    borg_install ~/foo

        Install the latest from the master branch to ~/foo

    borg_install ~/bar/zot -b feature

        Install the latest from the feature branch to ~/bar/zot

USAGE_DOC
}

